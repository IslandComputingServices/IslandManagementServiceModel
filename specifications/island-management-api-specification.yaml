openapi: 3.0.3
info:
  title: ICS Island Management Service API
  description: ICS native service for managing compute islands
  version: 1.0.0
  contact:
    name: ICS API Support
    email: api-support@islandcomputing.io

servers:
  - url: https://islands.ap-in-1.ics.io
    description: ICS Asia Pacific (India) Region 1

paths:
  /:
    post:
      summary: Execute Island Management Actions
      description: Perform various island management operations
      requestBody:
        required: true
        content:
          application/x-ics-json-1.0:
            schema:
              oneOf:
                - $ref: '#/components/schemas/RunIslandRequest'
                - $ref: '#/components/schemas/DescribeIslandsRequest'
                - $ref: '#/components/schemas/ModifyIslandRequest'
                - $ref: '#/components/schemas/TerminateIslandsRequest'
                - $ref: '#/components/schemas/ScaleIslandRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/x-ics-json-1.0:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/RunIslandResponse'
                  - $ref: '#/components/schemas/DescribeIslandsResponse'
                  - $ref: '#/components/schemas/ModifyIslandResponse'
                  - $ref: '#/components/schemas/TerminateIslandsResponse'
                  - $ref: '#/components/schemas/ScaleIslandResponse'
        '400':
          description: Bad Request
          content:
            application/x-ics-json-1.0:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Resource Not Found
          content:
            application/x-ics-json-1.0:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    # Core Island Model
    Island:
      type: object
      required:
        - IslandId
        - Name
        - State
        - InstanceType
        - EnvironmentType
        - LaunchTime
      properties:
        IslandId:
          type: string
          pattern: '^irn:ics:core:ap-in-1:organization/[a-zA-Z0-9-]+:island/[a-zA-Z0-9-]+$'
          example: "irn:ics:core:ap-in-1:organization/org-123456:island/isl-abcdef123"
        Name:
          type: string
          minLength: 1
          maxLength: 255
          example: "web-production-island"
        Description:
          type: string
          maxLength: 1000
          example: "Production web application island"
        State:
          type: string
          enum: [pending, running, stopping, stopped, shutting-down, terminated]
          example: "running"
        InstanceType:
          type: string
          enum: [t3.micro, t3.small, t3.medium, t3.large, t3.xlarge, t3.2xlarge]
          example: "t3.small"
        EnvironmentType:
          type: string
          enum: [development, testing, staging, production, sandbox]
          example: "production"
        LaunchTime:
          type: string
          format: date-time
          example: "2025-09-07T22:00:00.000Z"
        Organization:
          $ref: '#/components/schemas/Organization'
        Compute:
          $ref: '#/components/schemas/ComputeConfiguration'
        Network:
          $ref: '#/components/schemas/NetworkConfiguration'
        Storage:
          $ref: '#/components/schemas/StorageConfiguration'
        LoadBalancer:
          $ref: '#/components/schemas/LoadBalancerConfiguration'

    # Organization
    Organization:
      type: object
      required:
        - OrganizationId
        - Name
      properties:
        OrganizationId:
          type: string
          pattern: '^irn:ics:core:ap-in-1:organization/[a-zA-Z0-9-]+$'
          example: "irn:ics:core:ap-in-1:organization/org-123456"
        Name:
          type: string
          example: "MyCompany"

    # Compute Configuration
    ComputeConfiguration:
      type: object
      required:
        - ScalingGroupId
        - MinSize
        - MaxSize
        - DesiredCapacity
      properties:
        ScalingGroupId:
          type: string
          pattern: '^irn:ics:scaling:ap-in-1:organization/[a-zA-Z0-9-]+:island/[a-zA-Z0-9-]+:resource/[a-zA-Z0-9-]+$'
          example: "irn:ics:scaling:ap-in-1:organization/org-123456:island/isl-abcdef123:resource/sg-001"
        MinSize:
          type: integer
          minimum: 0
          maximum: 1000
          example: 2
        MaxSize:
          type: integer
          minimum: 0
          maximum: 1000
          example: 10
        DesiredCapacity:
          type: integer
          minimum: 0
          maximum: 1000
          example: 4
        InstanceType:
          type: string
          enum: [t3.micro, t3.small, t3.medium, t3.large, t3.xlarge, t3.2xlarge]
          example: "t3.small"
        HealthCheckType:
          type: string
          enum: [ELB, ICS]
          example: "ELB"
        HealthCheckGracePeriod:
          type: integer
          minimum: 0
          maximum: 7200
          example: 300

    # Network Configuration
    NetworkConfiguration:
      type: object
      required:
        - NetworkId
        - SubnetId
      properties:
        NetworkId:
          type: string
          pattern: '^irn:ics:network:ap-in-1:organization/[a-zA-Z0-9-]+:island/[a-zA-Z0-9-]+:resource/[a-zA-Z0-9-]+$'
          example: "irn:ics:network:ap-in-1:organization/org-123456:island/isl-abcdef123:resource/net-001"
        SubnetId:
          type: string
          pattern: '^irn:ics:network:ap-in-1:organization/[a-zA-Z0-9-]+:island/[a-zA-Z0-9-]+:resource/[a-zA-Z0-9-]+$'
          example: "irn:ics:network:ap-in-1:organization/org-123456:island/isl-abcdef123:resource/subnet-001"
        SecurityGroupIds:
          type: array
          items:
            type: string
            pattern: '^irn:ics:security:ap-in-1:organization/[a-zA-Z0-9-]+:island/[a-zA-Z0-9-]+:resource/[a-zA-Z0-9-]+$'
          example: ["irn:ics:security:ap-in-1:organization/org-123456:island/isl-abcdef123:resource/sg-web"]

    # Storage Configuration
    StorageConfiguration:
      type: object
      required:
        - VolumeIds
        - VolumeType
        - Size
      properties:
        VolumeIds:
          type: array
          items:
            type: string
            pattern: '^irn:ics:storage:ap-in-1:organization/[a-zA-Z0-9-]+:island/[a-zA-Z0-9-]+:resource/[a-zA-Z0-9-]+$'
          example: ["irn:ics:storage:ap-in-1:organization/org-123456:island/isl-abcdef123:resource/vol-001"]
        VolumeType:
          type: string
          enum: [gp3, gp2, io1, io2]
          example: "gp3"
        Size:
          type: integer
          minimum: 1
          maximum: 16384
          example: 20

    # Load Balancer Configuration
    LoadBalancerConfiguration:
      type: object
      required:
        - LoadBalancerId
        - Type
        - State
      properties:
        LoadBalancerId:
          type: string
          pattern: '^irn:ics:loadbalancer:ap-in-1:organization/[a-zA-Z0-9-]+:island/[a-zA-Z0-9-]+:resource/[a-zA-Z0-9-]+$'
          example: "irn:ics:loadbalancer:ap-in-1:organization/org-123456:island/isl-abcdef123:resource/lb-001"
        Type:
          type: string
          enum: [application, network]
          example: "application"
        State:
          type: string
          enum: [provisioning, active, active_impaired, failed]
          example: "active"

    # Request Models
    RunIslandRequest:
      type: object
      required:
        - Action
        - Name
        - OrganizationId
        - InstanceType
        - EnvironmentType
      properties:
        Action:
          type: string
          enum: [RunIsland]
        Name:
          type: string
          minLength: 1
          maxLength: 255
        OrganizationId:
          type: string
          pattern: '^org-[a-zA-Z0-9-]+$'
        InstanceType:
          type: string
          enum: [t3.micro, t3.small, t3.medium, t3.large, t3.xlarge, t3.2xlarge]
        EnvironmentType:
          type: string
          enum: [development, testing, staging, production, sandbox]
        Description:
          type: string
          maxLength: 1000
        MinSize:
          type: integer
          minimum: 0
          maximum: 1000
          default: 1
        MaxSize:
          type: integer
          minimum: 0
          maximum: 1000
          default: 10
        VolumeSize:
          type: integer
          minimum: 1
          maximum: 16384
          default: 20
        VolumeType:
          type: string
          enum: [gp3, gp2, io1, io2]
          default: "gp3"

    DescribeIslandsRequest:
      type: object
      required:
        - Action
      properties:
        Action:
          type: string
          enum: [DescribeIslands]
        IslandIds:
          type: array
          items:
            type: string
            pattern: '^irn:ics:core:ap-in-1:organization/[a-zA-Z0-9-]+:island/[a-zA-Z0-9-]+$'
        Filters:
          type: array
          items:
            $ref: '#/components/schemas/Filter'
        MaxResults:
          type: integer
          minimum: 1
          maximum: 1000
          default: 50
        NextToken:
          type: string

    ModifyIslandRequest:
      type: object
      required:
        - Action
        - IslandId
      properties:
        Action:
          type: string
          enum: [ModifyIsland]
        IslandId:
          type: string
          pattern: '^irn:ics:core:ap-in-1:organization/[a-zA-Z0-9-]+:island/[a-zA-Z0-9-]+$'
        InstanceType:
          type: string
          enum: [t3.micro, t3.small, t3.medium, t3.large, t3.xlarge, t3.2xlarge]
        EnvironmentType:
          type: string
          enum: [development, testing, staging, production, sandbox]
        MinSize:
          type: integer
          minimum: 0
          maximum: 1000
        MaxSize:
          type: integer
          minimum: 0
          maximum: 1000

    TerminateIslandsRequest:
      type: object
      required:
        - Action
        - IslandIds
      properties:
        Action:
          type: string
          enum: [TerminateIslands]
        IslandIds:
          type: array
          items:
            type: string
            pattern: '^irn:ics:core:ap-in-1:organization/[a-zA-Z0-9-]+:island/[a-zA-Z0-9-]+$'

    ScaleIslandRequest:
      type: object
      required:
        - Action
        - IslandId
      properties:
        Action:
          type: string
          enum: [ScaleIsland]
        IslandId:
          type: string
          pattern: '^irn:ics:core:ap-in-1:organization/[a-zA-Z0-9-]+:island/[a-zA-Z0-9-]+$'
        DesiredCapacity:
          type: integer
          minimum: 0
          maximum: 1000
        MinSize:
          type: integer
          minimum: 0
          maximum: 1000
        MaxSize:
          type: integer
          minimum: 0
          maximum: 1000

    # Response Models
    RunIslandResponse:
      type: object
      required:
        - Island
        - ResponseMetadata
      properties:
        Island:
          $ref: '#/components/schemas/Island'
        ResponseMetadata:
          $ref: '#/components/schemas/ResponseMetadata'

    DescribeIslandsResponse:
      type: object
      required:
        - Islands
        - ResponseMetadata
      properties:
        Islands:
          type: array
          items:
            $ref: '#/components/schemas/Island'
        NextToken:
          type: string
        ResponseMetadata:
          $ref: '#/components/schemas/ResponseMetadata'

    ModifyIslandResponse:
      type: object
      required:
        - Island
        - ResponseMetadata
      properties:
        Island:
          $ref: '#/components/schemas/Island'
        ResponseMetadata:
          $ref: '#/components/schemas/ResponseMetadata'

    TerminateIslandsResponse:
      type: object
      required:
        - TerminatingIslands
        - ResponseMetadata
      properties:
        TerminatingIslands:
          type: array
          items:
            $ref: '#/components/schemas/IslandStateChange'
        ResponseMetadata:
          $ref: '#/components/schemas/ResponseMetadata'

    ScaleIslandResponse:
      type: object
      required:
        - ScalingActivity
        - ResponseMetadata
      properties:
        ScalingActivity:
          $ref: '#/components/schemas/ScalingActivity'
        ResponseMetadata:
          $ref: '#/components/schemas/ResponseMetadata'

    # Supporting Models
    Filter:
      type: object
      required:
        - Name
        - Values
      properties:
        Name:
          type: string
          enum: [state, environment-type, instance-type]
        Values:
          type: array
          items:
            type: string

    IslandStateChange:
      type: object
      required:
        - IslandId
        - CurrentState
        - PreviousState
      properties:
        IslandId:
          type: string
          pattern: '^irn:ics:core:ap-in-1:organization/[a-zA-Z0-9-]+:island/[a-zA-Z0-9-]+$'
        CurrentState:
          $ref: '#/components/schemas/IslandState'
        PreviousState:
          $ref: '#/components/schemas/IslandState'

    IslandState:
      type: object
      required:
        - Code
        - Name
      properties:
        Code:
          type: integer
          example: 16
        Name:
          type: string
          example: "running"

    ScalingActivity:
      type: object
      required:
        - ActivityId
        - Status
        - StartTime
      properties:
        ActivityId:
          type: string
          pattern: '^irn:ics:scaling:ap-in-1:organization/[a-zA-Z0-9-]+:island/[a-zA-Z0-9-]+:resource/[a-zA-Z0-9-]+$'
        Status:
          type: string
          enum: [InProgress, Successful, Cancelled, Failed]
        StartTime:
          type: string
          format: date-time
        Description:
          type: string

    ResponseMetadata:
      type: object
      required:
        - RequestId
      properties:
        RequestId:
          type: string
          pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'

    ErrorResponse:
      type: object
      required:
        - Error
        - RequestId
      properties:
        Error:
          type: object
          required:
            - Code
            - Message
          properties:
            Code:
              type: string
              example: "InvalidIslandId.NotFound"
            Message:
              type: string
              example: "The island ID does not exist"
        RequestId:
          type: string
          pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
