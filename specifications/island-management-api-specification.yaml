openapi: 3.0.3
info:
  title: ICS Island Management Service API
  description: ICS native service for managing compute islands
  version: 1.0.0
  contact:
    name: ICS API Support
    email: api@islandcomputing.io

servers:
  - url: https://IMS.ap-in-1.IslandComputing.io
    description: ICS Asia Pacific (India) Region 1

paths:
  /:
    post:
      summary: Execute Island Management Actions
      description: Perform various island management operations
      parameters:
        - name: x-ics-requestid
          in: header
          required: false
          schema:
            type: string
            pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
          description: ICS request identifier - MUST be client-generated UUID for request tracking and correlation (follows major cloud provider standard)
        - name: x-ics-idempotency-token
          in: header
          required: false
          schema:
            type: string
            maxLength: 64
          description: ICS idempotency token for safe retries
        - name: x-ics-traceid
          in: header
          required: false
          schema:
            type: string
            maxLength: 128
          description: ICS trace identifier for request tracking
      requestBody:
        required: true
        content:
          application/x-ics-json-1.0:
            schema:
              oneOf:
                - $ref: '#/components/schemas/LaunchIslandRequest'
                - $ref: '#/components/schemas/DescribeIslandsRequest'
                - $ref: '#/components/schemas/ModifyIslandRequest'
                - $ref: '#/components/schemas/TerminateIslandsRequest'
                - $ref: '#/components/schemas/ScaleIslandRequest'
      responses:
        '200':
          description: Successful operation
          headers:
            x-ics-requestid:
              schema:
                type: string
              description: ICS request identifier
          content:
            application/x-ics-json-1.0:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/LaunchIslandResponse'
                  - $ref: '#/components/schemas/DescribeIslandsResponse'
                  - $ref: '#/components/schemas/ModifyIslandResponse'
                  - $ref: '#/components/schemas/TerminateIslandsResponse'
                  - $ref: '#/components/schemas/ScaleIslandResponse'
        '400':
          description: Bad Request
          content:
            application/x-ics-json-1.0:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '401':
          description: Unauthorized
          content:
            application/x-ics-json-1.0:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '403':
          description: Forbidden
          content:
            application/x-ics-json-1.0:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: Resource Not Found
          content:
            application/x-ics-json-1.0:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '409':
          description: Conflict
          content:
            application/x-ics-json-1.0:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '429':
          description: Too Many Requests
          content:
            application/x-ics-json-1.0:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '500':
          description: Internal Server Error
          content:
            application/x-ics-json-1.0:
              schema:
                $ref: '#/components/schemas/InternalException'
        '503':
          description: Service Unavailable
          content:
            application/x-ics-json-1.0:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'

components:
  schemas:
    # Request Models
    LaunchIslandRequest:
      type: object
      required:
        - Action
        - Name
        - OrganizationId
        - EnvironmentType
      properties:
        Action:
          type: string
          enum: [LaunchIsland]
        Name:
          type: string
          minLength: 1
          maxLength: 255
        OrganizationId:
          type: string
          pattern: '^org-[a-zA-Z0-9-]+$'
        EnvironmentType:
          type: string
          enum: [testing, staging, production]
        Description:
          type: string
          maxLength: 1000
        Compute:
          $ref: '#/components/schemas/ComputeSpecification'
        BlockDeviceMappings:
          type: array
          items:
            $ref: '#/components/schemas/BlockDeviceMapping'
          description: Storage attachments for the island

    DescribeIslandsRequest:
      type: object
      required:
        - Action
      properties:
        Action:
          type: string
          enum: [DescribeIslands]
        IslandIds:
          type: array
          items:
            type: string
            pattern: '^irn:ics:core:ap-in-1:organization/[a-zA-Z0-9-]+:island/[a-zA-Z0-9-]+$'
        Filters:
          type: array
          items:
            $ref: '#/components/schemas/Filter'
        MaxResults:
          type: integer
          minimum: 1
          maximum: 1000
          default: 50
        NextToken:
          type: string

    ModifyIslandRequest:
      type: object
      required:
        - Action
        - IslandId
      properties:
        Action:
          type: string
          enum: [ModifyIsland]
        IslandId:
          type: string
          pattern: '^irn:ics:core:ap-in-1:organization/[a-zA-Z0-9-]+:island/[a-zA-Z0-9-]+$'
        EnvironmentType:
          type: string
          enum: [testing, staging, production]
        Compute:
          $ref: '#/components/schemas/ComputeSpecification'

    TerminateIslandsRequest:
      type: object
      required:
        - Action
        - IslandIds
      properties:
        Action:
          type: string
          enum: [TerminateIslands]
        IslandIds:
          type: array
          items:
            type: string
            pattern: '^irn:ics:core:ap-in-1:organization/[a-zA-Z0-9-]+:island/[a-zA-Z0-9-]+$'

    ScaleIslandRequest:
      type: object
      required:
        - Action
        - IslandId
      properties:
        Action:
          type: string
          enum: [ScaleIsland]
        IslandId:
          type: string
          pattern: '^irn:ics:core:ap-in-1:organization/[a-zA-Z0-9-]+:island/[a-zA-Z0-9-]+$'
        Compute:
          $ref: '#/components/schemas/ComputeSpecification'

    # Response Models
    LaunchIslandResponse:
      type: object
      required:
        - Island
        - ResponseMetadata
      properties:
        Island:
          $ref: '#/components/schemas/Island'
        ResponseMetadata:
          $ref: '#/components/schemas/ResponseMetadata'

    DescribeIslandsResponse:
      type: object
      required:
        - Islands
        - ResponseMetadata
      properties:
        Islands:
          type: array
          items:
            $ref: '#/components/schemas/Island'
        NextToken:
          type: string
        ResponseMetadata:
          $ref: '#/components/schemas/ResponseMetadata'

    ModifyIslandResponse:
      type: object
      required:
        - Island
        - ResponseMetadata
      properties:
        Island:
          $ref: '#/components/schemas/Island'
        ResponseMetadata:
          $ref: '#/components/schemas/ResponseMetadata'

    TerminateIslandsResponse:
      type: object
      required:
        - TerminatingIslands
        - ResponseMetadata
      properties:
        TerminatingIslands:
          type: array
          items:
            $ref: '#/components/schemas/IslandStateChange'
        ResponseMetadata:
          $ref: '#/components/schemas/ResponseMetadata'

    ScaleIslandResponse:
      type: object
      required:
        - ScalingActivity
        - ResponseMetadata
      properties:
        ScalingActivity:
          $ref: '#/components/schemas/ScalingActivity'
        ResponseMetadata:
          $ref: '#/components/schemas/ResponseMetadata'

    # Core Island Model
    Island:
      type: object
      required:
        - IslandIRN
        - IslandId
        - Name
        - State
        - EnvironmentType
        - LaunchTime
      properties:
        IslandIRN:
          type: string
          pattern: '^irn:ics:core:ap-in-1:organization/[a-zA-Z0-9-]+:island/[a-zA-Z0-9-]+$'
          example: "irn:ics:core:ap-in-1:organization/org-123456:island/isl-abcdef123"
        IslandId:
          type: string
          pattern: '^isl-[a-zA-Z0-9]+$'
          example: "isl-abcdef123"
          description: "Short island identifier extracted from IRN for convenience - both IslandIRN and IslandId provided as requested"
        Name:
          type: string
          minLength: 1
          maxLength: 255
          example: "web-production-island"
        Description:
          type: string
          maxLength: 1000
          example: "Production web application island"
        State:
          type: string
          enum: [pending, provisioning, running, stopping, stopped, shutting-down, terminated]
          example: "running"
          description: "Island lifecycle state - provisioning indicates infrastructure setup (VPC, compute, etc.)"
        EnvironmentType:
          type: string
          enum: [testing, staging, production]
          example: "production"
          description: "Environment classification - enum chosen for API consistency and validation. Limited to 3 core environments as per requirements."
        LaunchTime:
          type: string
          format: date-time
          example: "2025-09-07T22:00:00.000Z"
        Compute:
          $ref: '#/components/schemas/ComputeConfiguration'
        BlockDeviceMappings:
          type: array
          items:
            $ref: '#/components/schemas/BlockDeviceMapping'

    # Compute Configuration
    ComputeConfiguration:
      type: object
      required:
        - InstanceType
        - MinSize
        - MaxSize
        - DesiredCapacity
      properties:
        InstanceType:
          type: string
          enum: [t3.micro, t3.small, t3.medium, t3.large, t3.xlarge, t3.2xlarge]
          example: "t3.small"
          description: "Instance type enum follows industry standard for API consistency"
        MinSize:
          type: integer
          minimum: 0
          maximum: 1000
          example: 2
        MaxSize:
          type: integer
          minimum: 0
          maximum: 1000
          example: 10
        DesiredCapacity:
          type: integer
          minimum: 0
          maximum: 1000
          example: 4
        HealthCheckType:
          type: string
          enum: [ELB, ICS]
          example: "ELB"
        HealthCheckGracePeriod:
          type: integer
          minimum: 0
          maximum: 7200
          example: 300

    ComputeSpecification:
      type: object
      required:
        - InstanceType
      properties:
        InstanceType:
          type: string
          enum: [t3.micro, t3.small, t3.medium, t3.large, t3.xlarge, t3.2xlarge]
          description: "Instance type enum follows industry standard for API consistency"
        MinSize:
          type: integer
          minimum: 0
          maximum: 1000
          default: 1
        MaxSize:
          type: integer
          minimum: 0
          maximum: 1000
          default: 10
        DesiredCapacity:
          type: integer
          minimum: 0
          maximum: 1000

    # Storage as Attachment (Local Storage Only)
    BlockDeviceMapping:
      type: object
      required:
        - DeviceName
        - Ebs
      properties:
        DeviceName:
          type: string
          example: "/dev/sda1"
        Ebs:
          type: object
          required:
            - VolumeSize
            - VolumeType
          properties:
            VolumeSize:
              type: integer
              minimum: 1
              maximum: 16384
              default: 20
              description: "Volume size in GB (local storage at hypervisor level)"
            VolumeType:
              type: string
              enum: [local]
              default: "local"
              description: "Only local storage supported currently"
            DeleteOnTermination:
              type: boolean
              default: true

    # Supporting Models
    Filter:
      type: object
      required:
        - Name
        - Values
      properties:
        Name:
          type: string
          enum: [state, environment-type, instance-type]
        Values:
          type: array
          items:
            type: string

    IslandStateChange:
      type: object
      required:
        - IslandId
        - CurrentState
        - PreviousState
      properties:
        IslandId:
          type: string
          pattern: '^irn:ics:core:ap-in-1:organization/[a-zA-Z0-9-]+:island/[a-zA-Z0-9-]+$'
        CurrentState:
          $ref: '#/components/schemas/IslandState'
        PreviousState:
          $ref: '#/components/schemas/IslandState'

    IslandState:
      type: object
      required:
        - Code
        - Name
      properties:
        Code:
          type: integer
          example: 16
        Name:
          type: string
          example: "running"

    ScalingActivity:
      type: object
      required:
        - ActivityId
        - Status
        - StartTime
      properties:
        ActivityId:
          type: string
          pattern: '^irn:ics:scaling:ap-in-1:organization/[a-zA-Z0-9-]+:island/[a-zA-Z0-9-]+:resource/[a-zA-Z0-9-]+$'
        Status:
          type: string
          enum: [InProgress, Successful, Cancelled, Failed]
        StartTime:
          type: string
          format: date-time
        Description:
          type: string

    ResponseMetadata:
      type: object
      required:
        - RequestId
      properties:
        RequestId:
          type: string
          pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'

    # Exception Models - Clearly Named
    BadRequestException:
      type: object
      required:
        - Error
        - RequestId
      properties:
        Error:
          type: object
          required:
            - Code
            - Message
          properties:
            Code:
              type: string
              enum: [InvalidParameter, InvalidParameterValue, MissingParameter]
              example: "InvalidParameter"
            Message:
              type: string
              example: "The parameter 'InstanceType' is invalid"
            Details:
              type: object
              description: "Additional error context"
        RequestId:
          type: string
          pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'

    UnauthorizedException:
      type: object
      required:
        - Error
        - RequestId
      properties:
        Error:
          type: object
          required:
            - Code
            - Message
          properties:
            Code:
              type: string
              enum: [UnauthorizedOperation, InvalidCredentials]
              example: "UnauthorizedOperation"
            Message:
              type: string
              example: "You are not authorized to perform this operation"
        RequestId:
          type: string
          pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'

    ForbiddenException:
      type: object
      required:
        - Error
        - RequestId
      properties:
        Error:
          type: object
          required:
            - Code
            - Message
          properties:
            Code:
              type: string
              enum: [AccessDenied, InsufficientPermissions]
              example: "AccessDenied"
            Message:
              type: string
              example: "Access denied for this resource"
        RequestId:
          type: string
          pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'

    NotFoundException:
      type: object
      required:
        - Error
        - RequestId
      properties:
        Error:
          type: object
          required:
            - Code
            - Message
          properties:
            Code:
              type: string
              enum: [InvalidIslandId.NotFound, ResourceNotFound]
              example: "InvalidIslandId.NotFound"
            Message:
              type: string
              example: "The island ID does not exist"
        RequestId:
          type: string
          pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'

    ConflictException:
      type: object
      required:
        - Error
        - RequestId
      properties:
        Error:
          type: object
          required:
            - Code
            - Message
          properties:
            Code:
              type: string
              enum: [DependencyViolation, InvalidState, OperationNotPermitted]
              example: "InvalidState"
            Message:
              type: string
              example: "The island is in an invalid state for this operation"
        RequestId:
          type: string
          pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'

    ThrottlingException:
      type: object
      required:
        - Error
        - RequestId
      properties:
        Error:
          type: object
          required:
            - Code
            - Message
          properties:
            Code:
              type: string
              enum: [Throttling, RequestLimitExceeded]
              example: "Throttling"
            Message:
              type: string
              example: "Request rate limit exceeded"
            RetryAfter:
              type: integer
              description: "Seconds to wait before retrying"
        RequestId:
          type: string
          pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'

    InternalException:
      type: object
      required:
        - Error
        - RequestId
      properties:
        Error:
          type: object
          required:
            - Code
            - Message
          properties:
            Code:
              type: string
              enum: [InternalError, ServiceError]
              example: "InternalError"
            Message:
              type: string
              example: "An internal error occurred"
        RequestId:
          type: string
          pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'

    ServiceUnavailableException:
      type: object
      required:
        - Error
        - RequestId
      properties:
        Error:
          type: object
          required:
            - Code
            - Message
          properties:
            Code:
              type: string
              enum: [ServiceUnavailable, InsufficientCapacity]
              example: "ServiceUnavailable"
            Message:
              type: string
              example: "The service is temporarily unavailable"
            RetryAfter:
              type: integer
              description: "Seconds to wait before retrying"
        RequestId:
          type: string
          pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'

    ErrorResponse:
      type: object
      required:
        - Error
        - RequestId
      properties:
        Error:
          type: object
          required:
            - Code
            - Message
          properties:
            Code:
              type: string
              enum: 
                - InvalidIslandId.NotFound
                - InvalidParameter
                - InvalidParameterValue
                - MissingParameter
                - UnauthorizedOperation
                - AccessDenied
                - InsufficientCapacity
                - ResourceLimitExceeded
                - DependencyViolation
                - InvalidState
                - OperationNotPermitted
                - ServiceUnavailable
                - InternalError
                - Throttling
              example: "InvalidIslandId.NotFound"
            Message:
              type: string
              example: "The island ID does not exist"
            Details:
              type: object
              description: "Additional error context"
        RequestId:
          type: string
          pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
